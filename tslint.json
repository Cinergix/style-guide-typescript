//Core Rules - https://palantir.github.io/tslint/rules/
{
    "rules": {
        //TypeScript Sepcific
        "only-arrow-functions": true,
        "unified-signatures": true,
        //Functionality
        // "ban": "", //Not sure how this works - HT
        // "await-promise": true, //Requires Type
        "curly": true,
        "no-console": [
            true,
            "log",
            "warn",
            "info",
            "error",
            "debug",
            "time",
            "timeEnd",
            "trace"
        ],
        "no-duplicate-variable": true,
        "no-empty": false,
        "no-eval": true,
        // "no-floating-promises": true, //Requires Type
        "no-invalid-this": [
            true,
            "check-function-in-method"
        ],
        "no-misused-new": true,
        "no-shadowed-variable": true,
        "no-string-literal": true,
        "no-switch-case-fall-through": true,
        "no-duplicate-case": true,
        // "no-unbound-method": true, //Requires Type
        "no-unsafe-finally": true,
        // "no-unsafe-any": true, //Requires Type
        "no-unused-expression": true,
        "no-unused-new": true,
        "no-use-before-declare": true,
        "no-var-keyword": true,
        "no-var-requires": true,
        // "strict-type-predicates": true, //Requires Type
        "typeof-compare": true,
        "use-isnan": true,
        //Maintainability
        "cyclomatic-complexity": [
            true,
            10
        ], //Just trying this out. Must experiment - HT
        "eofline": true,
        "indent": [
            true,
            "spaces",
            4
        ],
        "linebreak-style": [
            true,
            "LF"
        ],
        "max-classes-per-file": [
            true,
            3
        ],
        "max-file-line-count": [
            true,
            900
        ],
        "max-line-length": [
            true,
            120
        ],
        "no-require-imports": true,
        "no-trailing-whitespace": true,
        "prefer-const": true,
        "trailing-comma": [
            true,
            {
                "multiline": "always",
                "singleline": "never"
            }
        ],
        //Style
        "align": [
            true,
            "parameters",
            "statements"
        ],
        "arrow-parens": [
            true,
            "ban-single-arg-parens"
        ],
        "arrow-return-shorthand": [
            true,
            "multiline"
        ],
        "ter-arrow-spacing": [
            true,
            {
                "before": true,
                "after": true
            }
        ],
        "class-name": true,
        "comment-format": [
            true,
            "check-space"
        ],
        // "completed-docs": [true], //Requires Type
        "import-spacing": true,
        "interface-name": [
            true
        ],
        "jsdoc-format": true,
        "new-parens": true,
        "no-consecutive-blank-lines": [
            true,
            2
        ],
        // "no-unnecessary-qualifier": true //Requires Type
        "object-literal-key-quotes": [
            true,
            "consistent-as-needed"
        ],
        "one-line": [
            true,
            "check-catch",
            "check-finally",
            "check-else",
            "check-open-brace",
            "check-whitespace"
        ],
        "one-variable-per-declaration": [
            true,
            "ignore-for-loop"
        ],
        "quotemark": [
            true,
            "single"
        ],
        "semicolon": [
            true,
            "always"
        ],
        "variable-name": [
            true,
            "check-format",
            "allow-leading-underscore"
        ],
        "whitespace": [
            true,
            "check-branch",
            "check-decl",
            "check-operator",
            "check-module",
            "check-separator",
            "check-type",
            "check-preblock"
        ],
        "space-in-parens": [
            true,
            "always",
            {
                "exceptions": [
                    "{}",
                    "[]",
                    "()",
                    "empty"
                ]
            }
        ],
        "brace-style": [
            true,
            "1tbs"
        ],
        "object-curly-spacing": [
            true,
            "always",
            {
                "objectsInObjects": false,
                "arraysInObjects": false
            }
        ],
        "array-bracket-spacing": [
            true,
            "always",
            {
                "objectsInArrays": false,
                "arraysInArrays": false
            }
        ],
        //From Angular CLI - Angular styleguide
        "callable-types": true,
        "forin": true,
        // "import-blacklist": [
        //     true,
        //     "rxjs"
        // ],
        "interface-over-type-literal": true,
        "label-position": true,
        "member-access": false,
        "member-ordering": [
            true,
            "static-before-instance"
        ],
        "no-arg": true,
        "no-bitwise": true,
        "no-construct": true,
        "no-debugger": true,
        "no-empty-interface": true,
        "no-string-throw": true,
        "object-literal-sort-keys": false,
        "radix": true,
        "triple-equals": [
            true,
            "allow-null-check"
        ],
        "typedef-whitespace": [
            true,
            {
                "call-signature": "nospace",
                "index-signature": "nospace",
                "parameter": "nospace",
                "property-declaration": "nospace",
                "variable-declaration": "nospace"
            }
        ],
        "directive-selector": [
            true,
            "attribute", "",
            "camelCase"
        ],
        "component-selector": [
            true,
            "element", "",
            "kebab-case"
        ],
        "use-input-property-decorator": true,
        "use-output-property-decorator": true,
        "use-host-property-decorator": true,
        "no-input-rename": false,
        "no-output-rename": false,
        "use-life-cycle-interface": true,
        "use-pipe-transform-interface": true,
        "component-class-suffix": false,
        "directive-class-suffix": false,
        "no-access-missing-member": true,
        "templates-use-public": false,
        "invoke-injectable": true
    },
    "rulesDirectory": [
        "node_modules/tslint-eslint-rules/dist/rules",
        "node_modules/codelyzer"
    ]
}
